

SPOT-Q training run
=============================
export CUDA_VISIBLE_DEVICES="" && taskset 0x000FFFFF python3 main.py --minigrid --target-update 2000 --T-max 1000000 --learn-start 20000 --memory-capacity 1000000 \
--replay-frequency 1 --multi-step 20 --architecture data-efficient --hidden-size 256 --learning-rate 0.0001 \
--evaluation-interval 10000 --memory results/lava-large-env-action-mask-spot-q/memory --checkpoint-interval 10000 \
--env MiniGrid-LavaCrossingS9N1-v0 --id lava-large-env-action-mask-spot-q --batch-size 128 --action-mask --spot-q

/home/costar/src/Rainbow/results/2020-06-01-lava-large-env-action-mask-spot-q


export CUDA_VISIBLE_DEVICES="" && taskset 0x000FFFFF python3 main.py --minigrid --target-update 2000 --T-max 1000000 --learn-start 20000 --memory-capacity 1000000 \
--replay-frequency 1 --multi-step 20 --architecture data-efficient --hidden-size 256 --learning-rate 0.0001 \
--evaluation-interval 10000 --memory results/lava-large-env-action-mask-spot-q-2/memory --checkpoint-interval 10000 \
--env MiniGrid-LavaCrossingS9N1-v0 --id lava-large-env-action-mask-spot-q-2 --batch-size 128 --action-mask --spot-q

/home/costar/src/Rainbow/results/2020-06-01-lava-large-env-action-mask-spot-q-2





export CUDA_VISIBLE_DEVICES="" && taskset 0x000FFFFF python3 main.py --minigrid --target-update 2000 --T-max 1000000 --learn-start 20000 --memory-capacity 1000000 \
--replay-frequency 1 --multi-step 20 --architecture data-efficient --hidden-size 256 --learning-rate 0.0001 \
--evaluation-interval 10000 --memory results/lava-large-env-action-mask-spot-q-2020-06-14/memory --checkpoint-interval 10000 \
--env MiniGrid-LavaCrossingS9N1-v0 --id lava-large-env-action-mask-spot-q-2020-06-14 --batch-size 128 --action-mask --spot-q --seed 1234
Commit: 33b8064708e0cf815cf5c26e63b185746120e559



NOTE: WIP this next run is with low performance but reliable sampling, which avoids infinite loops
Commit: e02bd97bd99b7fffb162fe61397e5bfc01ebb973
export CUDA_VISIBLE_DEVICES="" && taskset 0x000FFFFF python3 main.py --minigrid --target-update 2000 --T-max 1000000 --learn-start 20000 --memory-capacity 1000000 \
--replay-frequency 1 --multi-step 20 --architecture data-efficient --hidden-size 256 --learning-rate 0.0001 \
--evaluation-interval 10000 --memory results/lava-large-env-action-mask-spot-q-3/memory --checkpoint-interval 10000 \
--env MiniGrid-LavaCrossingS9N1-v0 --id lava-large-env-action-mask-spot-q-3 --batch-size 128 --action-mask --spot-q


SPOT-Q + rprogress training run
===============================


± export CUDA_VISIBLE_DEVICES="" && taskset 0x000FFFFF python3 main.py --minigrid --target-update 2000 --T-max 1000000 --learn-start 20000 --memory-capacity 1000000 \
--replay-frequency 1 --multi-step 1 --architecture data-efficient --hidden-size 256 --learning-rate 0.0001 \
--evaluation-interval 10000 --memory ./results/lava-large-env-action-mask-spot-q-progress-0/memory.pkl.bz2 --checkpoint-interval 10000 \
--env MiniGrid-LavaCrossingS9N1-v0 --id lava-large-env-action-mask-spot-q-progress-0 --batch-size 128 --action-mask --spot-q --progress-reward


export CUDA_VISIBLE_DEVICES="0" && taskset 0x000FFFFF python3 main.py --minigrid --target-update 2000 --T-max 1000000 --learn-start 20000 --memory-capacity 1000000 \
--replay-frequency 1 --multi-step 1 --architecture data-efficient --hidden-size 256 --learning-rate 0.0001 \
--evaluation-interval 10000 --memory ./results/lava-large-env-action-mask-spot-q-progress-2020-06-16-1254/memory.pkl.bz2 --checkpoint-interval 10000 \
--env MiniGrid-LavaCrossingS9N1-v0 --id lava-large-env-action-mask-spot-q-progress-2020-06-16-1254 --batch-size 128 --action-mask --spot-q --progress-reward
Commit: 3973de16426e9c3078b69013a033e0e4fea31081


export CUDA_VISIBLE_DEVICES="1" && taskset 0x000FFFFF python3 main.py --minigrid --target-update 2000 --T-max 1000000 --learn-start 20000 --memory-capacity 1000000 \
--replay-frequency 1 --multi-step 1 --architecture data-efficient --hidden-size 256 --learning-rate 0.0001 \
--evaluation-interval 10000 --memory ./results/lava-large-env-action-mask-spot-q-progress-2020-06-16-1255/memory.pkl.bz2 --checkpoint-interval 10000 \
--env MiniGrid-LavaCrossingS9N1-v0 --id lava-large-env-action-mask-spot-q-progress-2020-06-16-1255 --batch-size 128 --action-mask --spot-q --progress-reward --seed 1234
Commit: 3973de16426e9c3078b69013a033e0e4fea31081


export CUDA_VISIBLE_DEVICES="0" && taskset 0x000FFFFF python3 main.py --minigrid --target-update 2000 --T-max 1000000 --learn-start 20000 --memory-capacity 1000000 \
--replay-frequency 1 --multi-step 1 --architecture data-efficient --hidden-size 256 --learning-rate 0.0001 \
--evaluation-interval 5000 --memory ./results/lava-large-env-action-mask-spot-q-progress-2020-06-16-1254/memory.pkl.bz2 --checkpoint-interval 10000 \
--env MiniGrid-LavaCrossingS9N1-v0 --id lava-large-env-action-mask-spot-q-progress-2020-06-16-1532 --batch-size 128 --action-mask --spot-q --progress-reward
Commit: 3973de16426e9c3078b69013a033e0e4fea31081


export CUDA_VISIBLE_DEVICES="1" && taskset 0x000FFFFF python3 main.py --minigrid --target-update 2000 --T-max 1000000 --learn-start 20000 --memory-capacity 1000000 \
--replay-frequency 1 --multi-step 1 --architecture data-efficient --hidden-size 256 --learning-rate 0.0001 \
--evaluation-interval 5000 --memory ./results/lava-large-env-action-mask-spot-q-progress-2020-06-16-1255/memory.pkl.bz2 --checkpoint-interval 10000 \
--env MiniGrid-LavaCrossingS9N1-v0 --id lava-large-env-action-mask-spot-q-progress-2020-06-16-1533 --batch-size 128 --action-mask --spot-q --progress-reward --seed 1234
Commit: 3973de16426e9c3078b69013a033e0e4fea31081


Default training run
=====================

export CUDA_VISIBLE_DEVICES="" && taskset 0x000FFFFF python3 main.py --minigrid --target-update 2000 --T-max 1000000 --learn-start 20000 --memory-capacity 1000000 \
--replay-frequency 1 --multi-step 20 --architecture data-efficient --hidden-size 256 --learning-rate 0.0001 \
--evaluation-interval 10000 --memory results/lava-large-env-default/memory --checkpoint-interval 10000 \
--env MiniGrid-LavaCrossingS9N1-v0 --id lava-large-env-default --batch-size 128


export CUDA_VISIBLE_DEVICES="0" && taskset 0x000FFFFF python3 main.py --minigrid --target-update 2000 --T-max 1000000 --learn-start 20000 --memory-capacity 1000000 \
--replay-frequency 1 --multi-step 20 --architecture data-efficient --hidden-size 256 --learning-rate 0.0001 \
--evaluation-interval 10000 --memory results/lava-large-env-default-2020-06-14/memory --checkpoint-interval 10000 \
--env MiniGrid-LavaCrossingS9N1-v0 --id lava-large-env-default-2020-06-14 --batch-size 128 --seed 1234
Commit: 33b8064708e0cf815cf5c26e63b185746120e559



Mask only training run
=====================

export CUDA_VISIBLE_DEVICES="1" && taskset 0x000FFFFF python3 main.py --minigrid --target-update 2000 --T-max 1000000 --learn-start 20000 --memory-capacity 1000000 \
--replay-frequency 1 --multi-step 20 --architecture data-efficient --hidden-size 256 --learning-rate 0.0001 \
--evaluation-interval 10000 --memory results/lava-large-env-mask-2020-06-14/memory --checkpoint-interval 10000 \
--env MiniGrid-LavaCrossingS9N1-v0 --id lava-large-env-mask-2020-06-14 --action-mask --batch-size 128 --seed 1234




SimpleCrossing no lava default

==============================

export CUDA_VISIBLE_DEVICES="" && taskset 0x000FFFFF python3 main.py --minigrid --target-update 2000 --T-max 1000000 --learn-start 20000 --memory-capacity 1000000 \
--replay-frequency 1 --multi-step 20 --architecture data-efficient --hidden-size 256 --learning-rate 0.0001 \
--evaluation-interval 10000 --memory results/nolava-large-env-default-2020-06-15/memory --checkpoint-interval 10000 \
--env MiniGrid-SimpleCrossingS9N1-v0 --id nolava-large-env-default-2020-06-15 --batch-size 128
Commit: 33b8064708e0cf815cf5c26e63b185746120e559


super basic fast convergence no barrier test config
===================================================

± export CUDA_VISIBLE_DEVICES="" && taskset 0x000FFFFF python3 main.py --minigrid --target-update 2000 --T-max 1000000 --learn-start 2000 --memory-capacity 1000000 \
--replay-frequency 1 --multi-step 20 --architecture data-efficient --hidden-size 256 --learning-rate 0.0001 \
--evaluation-interval 5000 --memory results/empty-mask-spot-q-debug-cmdline/memory --checkpoint-interval 10000 \
--env MiniGrid-Empty-5x5-v0 --id empty-mask-spot-q-debug-cmdline --batch-size 32 --action-mask --spot-q --disable-cuda --render

Normal progress printout for comparison: [2020-06-10T15:21:00] T = 10000 / 1000000 | Avg. reward: 0.892 | Avg. Q: 0.830330894947052








Progress reward
===============

This is the first run, with support * args.discount ** 3 added to the reward
HTML
Reward.html
e97eb7be625a8a9e21b191772945a99413415b49 is the commit id
it's on the minigrid_reward_schedule_testing branch now

python main.py --minigrid --target-update 2000 --T-max 1000000 --learn-start 5000 --memory-capacity 1000000 \
--replay-frequency 1 --multi-step 1 --architecture data-efficient --hidden-size 256 --learning-rate 0.0001 --evaluation-interval 10000 --env MiniGrid-LavaCrossingS9N1-v0 --batch-size 128 --spot-q --action-mask --progress-reward --render

note the id parameters have been dropped





==================================================================
==================================================================
2020-06-17 Runs with corrected testing begin below
==================================================================
==================================================================




XXX DO NOT USE, REWARD OVERCOUNTING BUG XXX Vanilla Rainbow Lava world 500k actions
=======================================

XXX DO NOT USE, REWARD OVERCOUNTING BUG XXX
XXX Commit 76eae81e575092ef5166fd08941ba5059d10ddfd
XXX export CUDA_VISIBLE_DEVICES="0" && taskset 0x000FFFFF python3 main.py --minigrid --target-update 2000 --T-max 500000 --learn-start 20000 --memory-capacity 500000 \
XXX --replay-frequency 1 --multi-step 20 --architecture data-efficient --hidden-size 256 --learning-rate 0.0001 --evaluation-interval 5000 --env MiniGrid-LavaCrossingS9N1-v0 --batch-size 128 --id 2020-06-17-1905-lava-large-env-vanilla-rainbow-with-action-efficiency  --memory ./results/2020-06-17-1905-lava-large-env-vanilla-rainbow-with-action-efficiency/memory.pkl.bz2 --evaluation-episodes 30


XXX DO NOT USE, REWARD OVERCOUNTING BUG XXX
XXX Commit 76eae81e575092ef5166fd08941ba5059d10ddfd
XXX export CUDA_VISIBLE_DEVICES="1" && taskset 0x000FFFFF python3 main.py --minigrid --target-update 2000 --T-max 500000 --learn-start 20000 --memory-capacity 500000 \
XXX --replay-frequency 1 --multi-step 20 --architecture data-efficient --hidden-size 256 --learning-rate 0.0001 --evaluation-interval 5000 --env MiniGrid-LavaCrossingS9N1-v0 --batch-size 128 --id 2020-06-17-1906-lava-large-env-vanilla-rainbow-with-action-efficiency  --memory ./results/2020-06-17-1906-lava-large-env-vanilla-rainbow-with-action-efficiency/memory.pkl.bz2 --evaluation-episodes 30 --seed 1234


Vanilla Rainbow Lava world 500k actions
=======================================

Commit 897f45c5ec93386378c357e576528ef3e4d6216d
Note: we had to set the seed to 12 on this run buecause the default encountered a memory infinite loop bug unrelated to the algorithm we are testing.
export CUDA_VISIBLE_DEVICES="0" && taskset 0x000FFFFF python3 main.py --minigrid --target-update 2000 --T-max 500000 --learn-start 20000 --memory-capacity 500000 \
--replay-frequency 1 --multi-step 20 --architecture data-efficient --hidden-size 256 --learning-rate 0.0001 --evaluation-interval 5000 --env MiniGrid-LavaCrossingS9N1-v0 --batch-size 128 --id 2020-06-18-1405-lava-large-env-vanilla-rainbow-with-action-efficiency  --memory ./results/2020-06-18-1405-lava-large-env-vanilla-rainbow-with-action-efficiency/memory.pkl.bz2 --evaluation-episodes 30 --seed 12


Commit 0afffcd9a705806e64ce9fbf779ebd284fda09aa
export CUDA_VISIBLE_DEVICES="1" && taskset 0x000FFFFF python3 main.py --minigrid --target-update 2000 --T-max 500000 --learn-start 20000 --memory-capacity 500000 \
--replay-frequency 1 --multi-step 20 --architecture data-efficient --hidden-size 256 --learning-rate 0.0001 --evaluation-interval 5000 --env MiniGrid-LavaCrossingS9N1-v0 --batch-size 128 --id 2020-06-18-1406-lava-large-env-vanilla-rainbow-with-action-efficiency  --memory ./results/2020-06-18-1406-lava-large-env-vanilla-rainbow-with-action-efficiency/memory.pkl.bz2 --evaluation-episodes 30 --seed 1234

----------------

With fixed seeding, so tests are always the same: e7d6f3843e1725713e4c9b6050239725c0d86353
export CUDA_VISIBLE_DEVICES="0" && taskset 0x000FFFFF python3 main.py --minigrid --target-update 2000 --T-max 500000 --learn-start 20000 --memory-capacity 500000 \
--replay-frequency 1 --multi-step 20 --architecture data-efficient --hidden-size 256 --learning-rate 0.0001 --evaluation-interval 5000 --env MiniGrid-LavaCrossingS9N1-v0 --batch-size 128 --id 2020-06-19-1105-lava-large-env-vanilla-rainbow-with-action-efficiency  --memory ./results/2020-06-19-1105-lava-large-env-vanilla-rainbow-with-action-efficiency/memory.pkl.bz2 --evaluation-episodes 30 --train-seed 12

With fixed seeding, so tests are always the same: e7d6f3843e1725713e4c9b6050239725c0d86353
export CUDA_VISIBLE_DEVICES="1" && taskset 0x000FFFFF python3 main.py --minigrid --target-update 2000 --T-max 500000 --learn-start 20000 --memory-capacity 500000 \
--replay-frequency 1 --multi-step 20 --architecture data-efficient --hidden-size 256 --learning-rate 0.0001 --evaluation-interval 5000 --env MiniGrid-LavaCrossingS9N1-v0 --batch-size 128 --id 2020-06-19-1106-lava-large-env-vanilla-rainbow-with-action-efficiency  --memory ./results/2020-06-19-1106-lava-large-env-vanilla-rainbow-with-action-efficiency/memory.pkl.bz2 --evaluation-episodes 30 --train-seed 1234




action mask Rainbow Lava world 500k actions
=======================================

Commit 76eae81e575092ef5166fd08941ba5059d10ddfd
workstation named spot
export CUDA_VISIBLE_DEVICES="0" && taskset 0x000FFFFF python3 main.py --minigrid --target-update 2000 --T-max 500000 --learn-start 20000 --memory-capacity 500000 \
--replay-frequency 1 --multi-step 20 --architecture data-efficient --hidden-size 256 --learning-rate 0.0001 --evaluation-interval 5000 --env MiniGrid-LavaCrossingS9N1-v0 --batch-size 128 --id 2020-06-17-1907-lava-large-env-action-mask-no-spotq-rainbow-with-action-efficiency  --memory ./results/2020-06-17-1907-lava-large-env-action-mask-no-spotq-rainbow-with-action-efficiency/memory.pkl.bz2 --evaluation-episodes 30 --action-mask




Commit 76eae81e575092ef5166fd08941ba5059d10ddfd
workstation named spot
export CUDA_VISIBLE_DEVICES="1" && taskset 0x000FFFFF python3 main.py --minigrid --target-update 2000 --T-max 500000 --learn-start 20000 --memory-capacity 500000 \
--replay-frequency 1 --multi-step 20 --architecture data-efficient --hidden-size 256 --learning-rate 0.0001 --evaluation-interval 5000 --env MiniGrid-LavaCrossingS9N1-v0 --batch-size 128 --id 2020-06-17-1908-lava-large-env-action-mask-no-spotq-rainbow-with-action-efficiency  --memory ./results/2020-06-17-1908-lava-large-env-action-mask-no-spotq-rainbow-with-action-efficiency/memory.pkl.bz2 --evaluation-episodes 30 --seed 1234 --action-mask






SPOT-Q + Mask Rainbow Lava world 500k actions
=======================================

Commit 6301faf0be4ed242ba35deec0c4e85d31481b7d2
workstation named femur
export CUDA_VISIBLE_DEVICES="0" && taskset 0x000FFFFF python3 main.py --minigrid --target-update 2000 --T-max 500000 --learn-start 20000 --memory-capacity 500000 \
--replay-frequency 1 --multi-step 20 --architecture data-efficient --hidden-size 256 --learning-rate 0.0001 --evaluation-interval 5000 --env MiniGrid-LavaCrossingS9N1-v0 --batch-size 128 --id 2020-06-18-1527-lava-large-env-action-mask-spotq-rainbow-with-action-efficiency  --memory ./results/2020-06-18-1527-lava-large-env-action-mask-spotq-rainbow-with-action-efficiency/memory.pkl.bz2 --evaluation-episodes 30 --action-mask --spot-q




Commit 6301faf0be4ed242ba35deec0c4e85d31481b7d2
workstation named femur
export CUDA_VISIBLE_DEVICES="1" && python3 main.py --minigrid --target-update 2000 --T-max 500000 --learn-start 20000 --memory-capacity 500000 \
--replay-frequency 1 --multi-step 20 --architecture data-efficient --hidden-size 256 --learning-rate 0.0001 --evaluation-interval 5000 --env MiniGrid-LavaCrossingS9N1-v0 --batch-size 128 --id 2020-06-18-1528-lava-large-env-action-mask-spotq-rainbow-with-action-efficiency  --memory ./results/2020-06-18-1528-lava-large-env-action-mask-spotq-rainbow-with-action-efficiency/memory.pkl.bz2 --evaluation-episodes 30 --seed 1234 --action-mask --spot-q







SPOT-Q + Mask + Progress Rainbow Lava world 500k actions
=======================================

Commit 504c2ae7bef6f7458035d81da6a982675e2f7154
workstation named spot
export CUDA_VISIBLE_DEVICES="0" && python3 main.py --minigrid --target-update 2000 --T-max 500000 --learn-start 20000 --memory-capacity 500000 \
--replay-frequency 1 --multi-step 1 --architecture data-efficient --hidden-size 256 --learning-rate 0.0001 --evaluation-interval 5000 --env MiniGrid-LavaCrossingS9N1-v0 --batch-size 128 --id 2020-06-18-1745-lava-large-env-action-mask-spotq-progress-rainbow-with-action-efficiency  --memory ./results/2020-06-18-1745-lava-large-env-action-mask-spotq-progress-rainbow-with-action-efficiency/memory.pkl.bz2 --evaluation-episodes 30 --action-mask --spot-q --progress-reward




Commit 504c2ae7bef6f7458035d81da6a982675e2f7154
workstation named spot
export CUDA_VISIBLE_DEVICES="1" && python3 main.py --minigrid --target-update 2000 --T-max 500000 --learn-start 20000 --memory-capacity 500000 \
--replay-frequency 1 --multi-step 1 --architecture data-efficient --hidden-size 256 --learning-rate 0.0001 --evaluation-interval 5000 --env MiniGrid-LavaCrossingS9N1-v0 --batch-size 128 --id 2020-06-18-1746-lava-large-env-action-mask-spotq-progress-rainbow-with-action-efficiency  --memory ./results/2020-06-18-1746-lava-large-env-action-mask-spotq-progress-rainbow-with-action-efficiency/memory.pkl.bz2 --evaluation-episodes 30 --seed 1234 --action-mask --spot-q --progress-reward





==================================================================
==================================================================
2020-06-19 Runs with seeded testing, accurate action efficiency begin below
==================================================================
==================================================================



Vanilla Rainbow Lava world 500k actions
=======================================

With fixed seeding, so tests are always the same: 
4feeba43111d2724e002cc2d605abcfc686ad1a1
workstation named femur
export CUDA_VISIBLE_DEVICES="0" && taskset 0x000FFFFF python3 main.py --minigrid --target-update 2000 --T-max 500000 --learn-start 20000 --memory-capacity 500000 \
--replay-frequency 1 --multi-step 20 --architecture data-efficient --hidden-size 256 --learning-rate 0.0001 --evaluation-interval 5000 --env MiniGrid-LavaCrossingS9N1-v0 --batch-size 128 --id 2020-06-19-1505-lava-large-env-vanilla-rainbow-with-action-efficiency  --memory ./results/2020-06-19-1505-lava-large-env-vanilla-rainbow-with-action-efficiency/memory.pkl.bz2 --evaluation-episodes 30 --train-seed 12

With fixed seeding, so tests are always the same: 
4feeba43111d2724e002cc2d605abcfc686ad1a1
workstation named femur
export CUDA_VISIBLE_DEVICES="1" && taskset 0x000FFFFF python3 main.py --minigrid --target-update 2000 --T-max 500000 --learn-start 20000 --memory-capacity 500000 \
--replay-frequency 1 --multi-step 20 --architecture data-efficient --hidden-size 256 --learning-rate 0.0001 --evaluation-interval 5000 --env MiniGrid-LavaCrossingS9N1-v0 --batch-size 128 --id 2020-06-19-1506-lava-large-env-vanilla-rainbow-with-action-efficiency  --memory ./results/2020-06-19-1506-lava-large-env-vanilla-rainbow-with-action-efficiency/memory.pkl.bz2 --evaluation-episodes 30 --train-seed 1234




action mask Rainbow Lava world 500k actions
=======================================


Commit 4feeba43111d2724e002cc2d605abcfc686ad1a1
workstation named spot
export CUDA_VISIBLE_DEVICES="0" && taskset 0x000FFFFF python3 main.py --minigrid --target-update 2000 --T-max 500000 --learn-start 20000 --memory-capacity 500000 \
--replay-frequency 1 --multi-step 20 --architecture data-efficient --hidden-size 256 --learning-rate 0.0001 --evaluation-interval 5000 --env MiniGrid-LavaCrossingS9N1-v0 --batch-size 128 --id 2020-06-19-1507-lava-large-env-action-mask-no-spotq-rainbow-with-action-efficiency  --memory ./results/2020-06-19-1507-lava-large-env-action-mask-no-spotq-rainbow-with-action-efficiency/memory.pkl.bz2 --evaluation-episodes 30 --action-mask


Commit 4feeba43111d2724e002cc2d605abcfc686ad1a1
workstation named spot
export CUDA_VISIBLE_DEVICES="1" && taskset 0x000FFFFF python3 main.py --minigrid --target-update 2000 --T-max 500000 --learn-start 20000 --memory-capacity 500000 \
--replay-frequency 1 --multi-step 20 --architecture data-efficient --hidden-size 256 --learning-rate 0.0001 --evaluation-interval 5000 --env MiniGrid-LavaCrossingS9N1-v0 --batch-size 128 --id 2020-06-19-1508-lava-large-env-action-mask-no-spotq-rainbow-with-action-efficiency  --memory ./results/2020-06-19-1508-lava-large-env-action-mask-no-spotq-rainbow-with-action-efficiency/memory.pkl.bz2 --evaluation-episodes 30 --train-seed 1234 --action-mask



Commit 4feeba43111d2724e002cc2d605abcfc686ad1a1
workstation named costar
export CUDA_VISIBLE_DEVICES="0" && taskset 0x000FFFFF python3 main.py --minigrid --target-update 2000 --T-max 500000 --learn-start 20000 --memory-capacity 500000 \
--replay-frequency 1 --multi-step 20 --architecture data-efficient --hidden-size 256 --learning-rate 0.0001 --evaluation-interval 5000 --env MiniGrid-LavaCrossingS9N1-v0 --batch-size 128 --id 2020-06-20-1007-lava-large-env-action-mask-no-spotq-rainbow-with-action-efficiency  --memory ./results/2020-06-20-1007-lava-large-env-action-mask-no-spotq-rainbow-with-action-efficiency/memory.pkl.bz2 --evaluation-episodes 30 --action-mask


Commit 4feeba43111d2724e002cc2d605abcfc686ad1a1
workstation named costar
export CUDA_VISIBLE_DEVICES="1" && taskset 0x000FFFFF python3 main.py --minigrid --target-update 2000 --T-max 500000 --learn-start 20000 --memory-capacity 500000 \
--replay-frequency 1 --multi-step 20 --architecture data-efficient --hidden-size 256 --learning-rate 0.0001 --evaluation-interval 5000 --env MiniGrid-LavaCrossingS9N1-v0 --batch-size 128 --id 2020-06-20-1008-lava-large-env-action-mask-no-spotq-rainbow-with-action-efficiency  --memory ./results/2020-06-20-1008-lava-large-env-action-mask-no-spotq-rainbow-with-action-efficiency/memory.pkl.bz2 --evaluation-episodes 30 --train-seed 1234 --action-mask








SPOT-Q + Mask Rainbow Lava world 500k actions
=======================================

Commit 4feeba43111d2724e002cc2d605abcfc686ad1a1
workstation named sopt, tab 0
export CUDA_VISIBLE_DEVICES="0" && python3 main.py --minigrid --target-update 2000 --T-max 500000 --learn-start 20000 --memory-capacity 500000 \
--replay-frequency 1 --multi-step 20 --architecture data-efficient --hidden-size 256 --learning-rate 0.0001 --evaluation-interval 5000 --env MiniGrid-LavaCrossingS9N1-v0 --batch-size 128 --id 2020-06-19-1527-lava-large-env-action-mask-spotq-rainbow-with-action-efficiency  --memory ./results/2020-06-19-1527-lava-large-env-action-mask-spotq-rainbow-with-action-efficiency/memory.pkl.bz2 --evaluation-episodes 30 --action-mask --spot-q




Commit 4feeba43111d2724e002cc2d605abcfc686ad1a1
workstation named spot, tab 1
export CUDA_VISIBLE_DEVICES="1" && python3 main.py --minigrid --target-update 2000 --T-max 500000 --learn-start 20000 --memory-capacity 500000 \
--replay-frequency 1 --multi-step 20 --architecture data-efficient --hidden-size 256 --learning-rate 0.0001 --evaluation-interval 5000 --env MiniGrid-LavaCrossingS9N1-v0 --batch-size 128 --id 2020-06-19-1528-lava-large-env-action-mask-spotq-rainbow-with-action-efficiency  --memory ./results/2020-06-19-1528-lava-large-env-action-mask-spotq-rainbow-with-action-efficiency/memory.pkl.bz2 --evaluation-episodes 30 --train-seed 1234 --action-mask --spot-q


Commit 4feeba43111d2724e002cc2d605abcfc686ad1a1
workstation named sopt, tab 2
export CUDA_VISIBLE_DEVICES="0" && python3 main.py --minigrid --target-update 2000 --T-max 500000 --learn-start 20000 --memory-capacity 500000 \
--replay-frequency 1 --multi-step 20 --architecture data-efficient --hidden-size 256 --learning-rate 0.0001 --evaluation-interval 5000 --env MiniGrid-LavaCrossingS9N1-v0 --batch-size 128 --id 2020-06-20-0717-lava-large-env-action-mask-spotq-rainbow-with-action-efficiency  --memory ./results/2020-06-20-0717-lava-large-env-action-mask-spotq-rainbow-with-action-efficiency/memory.pkl.bz2 --evaluation-episodes 30 --train-seed 1235 --action-mask --spot-q




Commit 4feeba43111d2724e002cc2d605abcfc686ad1a1
workstation named spot, tab 3
export CUDA_VISIBLE_DEVICES="1" && python3 main.py --minigrid --target-update 2000 --T-max 500000 --learn-start 20000 --memory-capacity 500000 \
--replay-frequency 1 --multi-step 20 --architecture data-efficient --hidden-size 256 --learning-rate 0.0001 --evaluation-interval 5000 --env MiniGrid-LavaCrossingS9N1-v0 --batch-size 128 --id 2020-06-20-0718-lava-large-env-action-mask-spotq-rainbow-with-action-efficiency  --memory ./results/2020-06-20-0718-lava-large-env-action-mask-spotq-rainbow-with-action-efficiency/memory.pkl.bz2 --evaluation-episodes 30 --train-seed 1236 --action-mask --spot-q







SPOT-Q + Mask + Progress Rainbow Lava world 500k actions
=======================================

Commit 4feeba43111d2724e002cc2d605abcfc686ad1a1
workstation named costar, tab 16
export CUDA_VISIBLE_DEVICES="0" && python3 main.py --minigrid --target-update 2000 --T-max 500000 --learn-start 20000 --memory-capacity 500000 \
--replay-frequency 1 --multi-step 1 --architecture data-efficient --hidden-size 256 --learning-rate 0.0001 --evaluation-interval 5000 --env MiniGrid-LavaCrossingS9N1-v0 --batch-size 128 --id 2020-06-19-1545-lava-large-env-action-mask-spotq-progress-rainbow-with-action-efficiency  --memory ./results/2020-06-19-1545-lava-large-env-action-mask-spotq-progress-rainbow-with-action-efficiency/memory.pkl.bz2 --evaluation-episodes 30 --action-mask --spot-q --progress-reward




Commit 4feeba43111d2724e002cc2d605abcfc686ad1a1
workstation named costar, tab 17
export CUDA_VISIBLE_DEVICES="1" && python3 main.py --minigrid --target-update 2000 --T-max 500000 --learn-start 20000 --memory-capacity 500000 \
--replay-frequency 1 --multi-step 1 --architecture data-efficient --hidden-size 256 --learning-rate 0.0001 --evaluation-interval 5000 --env MiniGrid-LavaCrossingS9N1-v0 --batch-size 128 --id 2020-06-19-1546-lava-large-env-action-mask-spotq-progress-rainbow-with-action-efficiency  --memory ./results/2020-06-19-1546-lava-large-env-action-mask-spotq-progress-rainbow-with-action-efficiency/memory.pkl.bz2 --evaluation-episodes 30 --train-seed 1234 --action-mask --spot-q --progress-reward




Commit 4feeba43111d2724e002cc2d605abcfc686ad1a1
workstation named spot, tab 0
export CUDA_VISIBLE_DEVICES="0" && python3 main.py --minigrid --target-update 2000 --T-max 500000 --learn-start 20000 --memory-capacity 500000 \
--replay-frequency 1 --multi-step 1 --architecture data-efficient --hidden-size 256 --learning-rate 0.0001 --evaluation-interval 5000 --env MiniGrid-LavaCrossingS9N1-v0 --batch-size 128 --id 2020-06-20-1655-lava-large-env-action-mask-spotq-progress-rainbow-with-action-efficiency  --memory ./results/2020-06-20-1655-lava-large-env-action-mask-spotq-progress-rainbow-with-action-efficiency/memory.pkl.bz2 --evaluation-episodes 30 --action-mask --spot-q --progress-reward




Commit 4feeba43111d2724e002cc2d605abcfc686ad1a1
workstation named spot, tab 1
export CUDA_VISIBLE_DEVICES="1" && python3 main.py --minigrid --target-update 2000 --T-max 500000 --learn-start 20000 --memory-capacity 500000 \
--replay-frequency 1 --multi-step 1 --architecture data-efficient --hidden-size 256 --learning-rate 0.0001 --evaluation-interval 5000 --env MiniGrid-LavaCrossingS9N1-v0 --batch-size 128 --id 2020-06-20-1656-lava-large-env-action-mask-spotq-progress-rainbow-with-action-efficiency  --memory ./results/2020-06-20-1656-lava-large-env-action-mask-spotq-progress-rainbow-with-action-efficiency/memory.pkl.bz2 --evaluation-episodes 30 --train-seed 1234 --action-mask --spot-q --progress-reward





==================================================================
==================================================================
examples of how to do other checks
==================================================================
==================================================================

Example for how to re-run model evaluation on a completed model
===============================================================

export CUDA_VISIBLE_DEVICES="" && taskset 0x000FFFFF python3 main.py --minigrid --architecture data-efficient --hidden-size 256 --env MiniGrid-LavaCrossingS9N1-v0 --batch-size 128 --id 2020-06-17-1907-lava-large-env-action-mask-no-spotq-rainbow-with-action-efficiency  --memory ./results/2020-06-17-1907-lava-large-env-action-mask-no-spotq-rainbow-with-action-efficiency/memory.pkl.bz2 --model ./results/2020-06-17-1907-lava-large-env-action-mask-no-spotq-rainbow-with-action-efficiency/model.pth --evaluation-episodes 30 --action-mask --evaluate




small world lava gap s5 spot q + mask
======================================
export CUDA_VISIBLE_DEVICES="3" && taskset 0x000FFFFF python3 main.py --minigrid --target-update 2000 --T-max 500000 --learn-start 20000 --memory-capacity 500000 \
--replay-frequency 1 --multi-step 20 --architecture data-efficient --hidden-size 256 --learning-rate 0.0001 --evaluation-interval 5000 --env MiniGrid-LavaGapS5-v0 --batch-size 128 --id 2020-06-18-1527-lava-gaps5-action-mask-spotq-rainbow-with-action-efficiency  --memory ./results/2020-06-18-1527-lava-gaps5-action-mask-spotq-rainbow-with-action-efficiency/memory.pkl.bz2 --evaluation-episodes 30 --action-mask --spot-q